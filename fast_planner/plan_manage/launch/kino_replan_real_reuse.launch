<launch>
  <arg name="only2D" value="1"/>
  <arg name="only2D_not" value="0"/>

  <arg name="FilePath" value="/home/bhrqhb/catkin_ws/planner/catkin_ws_TGH_Planner/src/TGH-Planner/"/>
  <arg name="use_teb" value="true"/>
  <arg name="use_gazebo" value="true" />

  <!--这个odom是仿真的-->
  <arg name="robot_odom" value="/car_odom"/>
  <arg name="sensor_odom" value="/Odometry"/>
  <arg name="sensor_odom_parent_frame"  value="camera_init"/>
  <arg name="perception_data_topic" value="/livox/lidar_points"/>
  <arg name="max_vel_" value="2.0" />
  <arg name="max_acc_" value="1.5" />
  <arg name="offset_world_to_camerainit_x" value="0.0"/>
  <arg name="offset_world_to_camerainit_y" value="0.0"/>

  <arg name="max_steering_angel" value="45.0"/>
  <arg name="wheel_base" value="0.5"/>
  <!-- size of map, change the size in x, y, z according to your application -->
  <arg name="map_size_x" value="80.0"/>
  <arg name="map_size_y" value="80.0"/>
  <arg name="map_size_z" value=" 5.0"/>

  <!-- odom_topic是planner订阅用于规划 -->
  <!-- perception_data是sdf_map订阅用于建图，数据的位姿直接去tf里面查询，就不用再订阅传感器的位姿了 -->
  <!-- perception_data_type，用于处理depth_image = 1, 或者 point_cloud = 1-->
  <!-- lidar_link是雷达安装的位置，和小车的坐标轴一致 -->
  <!-- camera_link是相机安装的位置，和小车的坐标轴一致；camera_frame是图像帧的坐标轴，z轴朝前，x朝左，y朝右 -->
  <!-- 当前lidar的感知范围为11m， max_ray_length要比这个小才行-->
  <arg name="odom_topic" value="$(arg robot_odom)" />
  <arg name="lidar_link" value="body" />  

  <arg name="camera_link" value="d435_link" />
  <arg name="camera_frame" value="d435_depth_optical_frame" />  

  <!-- <arg name="perception_data_type" value="1" />
  <arg name="perception_data" value="/d435/depth/image_raw"/>
  <arg name="min_ray_length" value="0.1"/>
  <arg name="max_ray_length" value="7.0"/> -->

  <arg name="perception_data_type" value="2" />
  <arg name="perception_data" value="$(arg perception_data_topic)"/>
  <arg name="min_ray_length" value="0.1"/>
  <arg name="max_ray_length" value="10.0"/>

  <param name="/use_sim_time" value="false" />

  <node pkg="tf2_ros" type="static_transform_publisher" name="world_map_link" args="0 0 0 0 0 0 1 /world /map"/>
  <arg name="slam_link_x" value="$(eval 0.2 - offset_world_to_camerainit_x)" />
  <arg name="slam_link_y" value="$(eval 0.0 - offset_world_to_camerainit_y)" />

  <node pkg="tf2_ros" type="static_transform_publisher" name="SLAM_link"
      args="$(arg slam_link_x) $(arg slam_link_y) 0.6 0 0.17365 0 0.98480 /world /camera_init"/>  
  <node pkg="dynavoro" name="dynavoro" type="mainLauMethod" output="screen" respawn="true" launch-prefix="xterm -e">
    <remap from="/car_odom" to="$(arg odom_topic)"/>
  </node>
  <node pkg="tf2_ros" type="static_transform_publisher" name="base_in_lidar_tf"
      args="0.0173 0 -0.6322 0 -0.17365 0 0.98480 /$(arg lidar_link) /base_link" />
  
  <node pkg="sensor_conversion" type="slam_sim_output_node" name="slam_sim_output_node" output="log" required="true">
      <param name="sensor_odom_parent_frame" value="$(arg sensor_odom_parent_frame)" />
      <param name="car_odom_topic" value="$(arg robot_odom)" />
      <param name="sensor_odom_topic" value="$(arg sensor_odom)" />
      <param name="local_cloud_sub_topic" value="$(arg perception_data)" />
      <param name="lidar_frame" value="$(arg lidar_link)"/>
      <param name="base_frame" value="base_link"/>
      <param name="down_voxel_size" value="0.1"/>
      <param name="is_sim" value="false"/>
  </node>

  <include file="$(find local_planner)/launch/cmu_local_planner.launch">
    <arg name="stateEstimationTopic" value="$(arg odom_topic)"/>
  </include>
  <include file="$(find save_map_point)/launch/map_pub.launch"/>
</launch>
