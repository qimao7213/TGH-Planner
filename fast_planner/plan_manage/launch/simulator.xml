<launch>
  <arg name="only2D"/>
  <arg name="only2D_not"/>
  <arg name="used_odom_name"/>
  <arg name="wheel_base_"/>  
  <arg name="max_steering_angel_"/>  
  <arg name="max_vel"/>
  <arg name="max_acc"/>

  <arg name="car_cmd" value="/car/cmd"/>
  <!-- <arg name="init_x" value="10.0"/>
  <arg name="init_y" value="-0.0"/>
  <arg name="init_z" value="0.5"/> 
  <arg name="init_phi" value="180"/>  -->
  <!-- icra0 -25, -24, phi:0 -->
  <!-- bugtrap10 -25, 0, phi:0 -->
  <!-- zigzag -25, -24, phi:0 -->
  <!-- local plan 0 0 0 , phi: 90-->
  <!-- perception: 1, -6, phi: 90 -->
  <arg name="init_x" value="-15"/>
  <arg name="init_y" value="0"/>
  <arg name="init_z" value="0.1"/> 
  <!-- 对init_z解释：对于二维的情况，z轴是不改变的。car的位姿用于设置gazebo里面model的位姿，对应的是base_link，对应的是机器人和地面的接触部分 -->
  <!-- 因此，init_z要稍微比地面高一点？不然gazebo里面机器人和地面发生碰撞而不稳定  -->
  <!-- 如果gazebo机器人的位姿不是set_model_node确定，而是由物理算出来的，那么这一部分应该就不用考虑了 -->

  <arg name="init_phi" value="90"/> 
  <arg name="obj_num" value="1" />
  <arg name="use_teb"/>  
  <arg name="use_gazebo"/>  
  <arg name="map_size_x_"/>
  <arg name="map_size_y_"/>
  <arg name="map_size_z_"/>
  <arg name="c_num"/>
  <arg name="p_num"/>
  <arg name="w_num"/>
  <arg name="u_w_num"/>
  <arg name="odometry_topic"/>
  <arg name="FilePath"/>

  <!-- <node pkg ="map_generator" name ="random_forest" type ="random_forest" output = "screen">    
    <remap from="~odometry"   to="$(arg odometry_topic)"/>    
    <param name="init_state_x"   value="$(arg init_x)"/>
    <param name="init_state_y"   value="$(arg init_y)"/>
    <param name="map/x_size"     value="$(arg map_size_x_)" />
    <param name="map/y_size"     value="$(arg map_size_y_)" />
    <param name="map/z_size"     value="$(arg map_size_z_)" />
    <param name="map/resolution" value="0.1"/>        

    <param name="ObstacleShape/seed" value="-1"/>
    <param name="map/obs_num"    value="$(arg p_num)"/>
    <param name="ObstacleShape/lower_rad" value="0.5"/>
    <param name="ObstacleShape/upper_rad" value="2.2"/>
    <param name="ObstacleShape/lower_hei" value="0.0"/>
    <param name="ObstacleShape/upper_hei" value="3.0"/>        

    <param name="map/circle_num" value="$(arg c_num)"/>        
    <param name="ObstacleShape/radius_l" value="0.7"/>        
    <param name="ObstacleShape/radius_h" value="0.5"/>        
    <param name="ObstacleShape/z_l" value="0.7"/>        
    <param name="ObstacleShape/z_h" value="0.8"/>        
    <param name="ObstacleShape/theta" value="1.5"/>        

    <param name="map/wall_num" value="$(arg w_num)"/>   
    <param name="map/u_wall_num" value="$(arg u_w_num)"/> 
    <param name="sensing/radius" value="5.0"/>        
    <param name="sensing/rate"   value="10.0"/>        
  </node> -->

  <!-- car simulator -->
  <!-- <group if="$(arg only2D)">
    <node pkg="nodelet" type="nodelet" name="car_simulator" args="standalone car_simulator/Nodelet" output="screen">
      <param name="simulator/init_state_x" value="$(arg init_x)"/>
      <param name="simulator/init_state_y" value="$(arg init_y)"/>
      <param name="simulator/init_state_z" value="$(arg init_z)"/>
      <param name="simulator/phi" value="$(arg init_phi)"/>
      <param name="simulator/wheel_base"   value="$(arg wheel_base_)"/>
      <param name="simulator/use_teb" value="$(arg use_teb)"/>
      <param name="rate/odom" value="200.0"/>

      <remap from="~odom_test" to="/car/odom"/>
      <remap from="~cmd"  to="$(arg car_cmd)"/>
      <remap from="/cmd_vel" to="/jackal_velocity_controller/cmd_vel"/>
    </node>
  </group> -->

  <group if="$(arg only2D_not)">
    <node pkg="so3_quadrotor_simulator" type="quadrotor_simulator_so3" name="quadrotor_simulator_so3" output="screen">
      <param name="rate/odom" value="200.0"/>
      <param name="simulator/init_state_x" value="$(arg init_x)"/>
      <param name="simulator/init_state_y" value="$(arg init_y)"/>
      <param name="simulator/init_state_z" value="$(arg init_z)"/>

      <remap from="~odom" to="$(arg used_odom_name)"/>
      <remap from="~cmd" to="so3_cmd"/>
      <remap from="~force_disturbance" to="force_disturbance"/>    
      <remap from="~moment_disturbance" to="moment_disturbance"/>        
    </node>
    <node pkg="nodelet" type="nodelet" args="standalone so3_control/SO3ControlNodelet" name="so3_control" required="true" output="screen">
       <remap from="~odom" to="/state_ukf/odom"/>
       <remap from="~position_cmd" to="/planning/pos_cmd"/>
       <remap from="~motors" to="motors"/>
       <remap from="~corrections" to="corrections"/>
       <remap from="~so3_cmd" to="so3_cmd"/>
       <rosparam file="$(find so3_control)/config/gains_hummingbird.yaml"/>
       <rosparam file="$(find so3_control)/config/corrections_hummingbird.yaml"/>
       <param name="mass" value="0.74"/>
       <param name="use_angle_corrections " value="false"/>
       <param name="use_external_yaw "      value="false"/>
       <param name="gains/rot/z" value="1.0"/>    
       <param name="gains/ang/z" value="0.1"/>        
    </node>     
  </group>
 
  <!-- <node pkg="so3_disturbance_generator" name="so3_disturbance_generator" type="so3_disturbance_generator" output="screen">
        <remap from="~odom" to="$(arg used_odom_name)"/>             
        <remap from="~noisy_odom" to="/state_ukf/odom"/>          
        <remap from="~correction" to="/visual_slam/correction"/>   
        <remap from="~force_disturbance" to="force_disturbance"/>        
        <remap from="~moment_disturbance" to="moment_disturbance"/>            
  </node>  -->
 
  <!-- <node pkg="odom_visualization" name="odom_visualization" type="odom_visualization" output="screen">
        <remap from="~odom" to="$(arg used_odom_name)"/>
        <param name="color/a" value="1.0"/>    
        <param name="color/r" value="0.0"/>        
        <param name="color/g" value="0.0"/>        
        <param name="color/b" value="1.0"/>       
        <param name="covariance_scale" value="100.0"/>       
        <param name="robot_scale" value="1.0"/>
  </node> -->

  <!-- <node pkg="local_sensing_node" type="pcl_render_node" name="pcl_render_node" output="screen">
        <rosparam command="load" file="$(find local_sensing_node)/params/camera.yaml" />
        <param name="sensing_horizon"  value="7.0" />
        <param name="sensing_rate"     value="30.0"/>
        <param name="estimation_rate"  value="30.0"/>
        <param name="use_gazebo" value="$(arg use_gazebo)"/>

        <param name="map/x_size"     value="$(arg map_size_x_)"/>
        <param name="map/y_size"     value="$(arg map_size_y_)"/>
        <param name="map/z_size"     value="$(arg map_size_z_)"/>

        <remap from="~global_map" to="/map_generator/global_cloud"/>
        <remap from="~odometry"   to="$(arg odometry_topic)"/>
        <remap from="~global_map_change" to="/map_generator/global_map_change"/>
  </node> -->

  <group if="$(arg use_gazebo)">
    <include file="$(find gazebo_simulator)/launch/gazebo_sim.launch">
      <!-- <arg name="odom_name" value="$(arg used_odom_name)"/> -->
    </include>
  </group>

</launch>